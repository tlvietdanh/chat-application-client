/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Swing.DashBoard;

import java.awt.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;

/**
 *
 * @author black
 */
public class UserItems extends javax.swing.JPanel implements ListCellRenderer<UserItems>{

    /**
     * Creates new form UserItems
     */
    public String currentTabs = "";

    Color tab_background_color = new Color(23,35,51);
    Color tab_press_color = new Color(102,102,102);
    
    public UserItems(String username, String avatar) {
        initComponents();
        if(username == "") {
            jLabel2.setText("");
            jLabel2.setIcon(null);
            jLabel3.setText("");
        }
        else {
            currentTabs = username;
            jLabel3.setText(username);
            this.setSize(new Dimension(300, this.getSize().height));
            setAvatar(avatar);
        }
    }

    public void setAvatar(String avatar) {
        URL url;
        Image image = null;
        ClassLoader cldr = this.getClass().getClassLoader();
        java.net.URL imageURL = cldr.getResource("user.png");
        ImageIcon img = new ImageIcon(imageURL);
        jLabel2.setIcon(img);
        jLabel2.setSize(64, 64);
        if(avatar == null || avatar.equals("")) {
            return;
        }
        try {
            url = new URL(avatar);
            image = ImageIO.read(url);
        } catch (Exception e) {
            return;
        }
        
        try {
            url = new URL("https://i.ibb.co/pKTbbVj/icons8-male-user-64.png");
            image = ImageIO.read(url);
            if(image != null) {
                System.out.println("https://i.ibb.co/pKTbbVj/icons8-male-user-64.png");
                jLabel2.setIcon(new ImageIcon(image));
                jLabel2.setSize(64, 64);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void setColor(JPanel panel) {
        panel.setBackground(this.tab_press_color);
    }
    
    private void resetColor(JPanel panel) {
        panel.setBackground(this.tab_background_color);
    }
    
    private void resetAllColor(JPanel current, JPanel[] listTabPanel) {
        for(int i = 0; i < listTabPanel.length; i++) {
            if(listTabPanel[i] == current) {
                continue;
            }
            listTabPanel[i].setBackground(this.tab_background_color);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tab_class = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        tab_class.setBackground(new java.awt.Color(102, 102, 102));
        tab_class.setAlignmentX(15.0F);
        tab_class.setAlignmentY(15.0F);
        tab_class.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tab_class.setMinimumSize(new java.awt.Dimension(64, 64));
        tab_class.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tab_classMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tab_classMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tab_classMouseExited(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/home-7-24.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Danh sách lớp");

        javax.swing.GroupLayout tab_classLayout = new javax.swing.GroupLayout(tab_class);
        tab_class.setLayout(tab_classLayout);
        tab_classLayout.setHorizontalGroup(
            tab_classLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_classLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
        );
        tab_classLayout.setVerticalGroup(
            tab_classLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(tab_class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 64, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(tab_class, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tab_classMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_classMouseClicked
        // TODO add your handling code here:
        DashBoard.currentTabs = this.currentTabs;
        setColor(this);
        DashBoard.resetAllColor(this);
    }//GEN-LAST:event_tab_classMouseClicked

    private void tab_classMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_classMouseEntered
        // TODO add your handling code here:
        if(DashBoard.currentTabs.equals(this.currentTabs)) {
            return;
        }
        setColor(this);
    }//GEN-LAST:event_tab_classMouseEntered

    private void tab_classMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tab_classMouseExited
        // TODO add your handling code here:
        if(DashBoard.currentTabs.equals(this.currentTabs)) {
            return;
        }
        resetColor(this);
    }//GEN-LAST:event_tab_classMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel tab_class;
    // End of variables declaration//GEN-END:variables

    @Override
    public Component getListCellRendererComponent(JList<? extends UserItems> list, UserItems value, int index, boolean isSelected, boolean cellHasFocus) {
        jLabel3.setText(value.currentTabs);
        
        if(isSelected && !value.currentTabs.equals("")) {
            setColor(tab_class);
            DashBoard.selectedItem = value;
            DashBoard.setVisibleChatPlace();
//            DashBoard.setVisibleTabs(currentTabs);
        }
        else {
            resetColor(tab_class);
        }
        
        
        return this;
    }
    
}
